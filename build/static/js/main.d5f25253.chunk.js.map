{"version":3,"sources":["components/Select.jsx","components/Input.jsx","units.js","App.jsx","index.js"],"names":["Select","label","items","onChange","htmlFor","className","id","map","option","value","factor","name","Input","type","units","App","useState","result","setResult","inputValue","setInputValue","fromValue","setFromValue","toValue","setToValue","onSubmit","e","preventDefault","target","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uLAiBeA,MAjBf,YAA6C,IAA3BC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC9B,OACE,gCACE,uBAAOC,QAAO,UAAKH,EAAL,WAAd,SAAoCA,IACpC,qBAAKI,UAAU,SAAf,SACE,wBAAQC,GAAE,UAAKL,EAAL,WAAqB,cAAaA,EAAOE,SAAUA,EAA7D,SACGD,EAAMK,KAAI,SAACC,GAAD,OACT,wBAAQC,MAAOD,EAAOE,OAAtB,SACGF,EAAOG,MADyBH,EAAOF,GADjC,UASpB,ECNcM,MATf,YAAqC,IAApBX,EAAmB,EAAnBA,MAAOE,EAAY,EAAZA,SACtB,OACE,qCACE,uBAAOC,QAASH,EAAhB,SAAwBA,IACxB,uBAAOY,KAAK,OAAOP,GAAIL,EAAO,cAAaA,EAAOE,SAAUA,MAGjE,ECPYW,EAAQ,CACnB,CACER,GAAI,EACJK,KAAM,QACND,OAAQ,GAEV,CACEJ,GAAI,EACJK,KAAM,aACND,OAAQ,KAEV,CACEJ,GAAI,EACJK,KAAM,aACND,OAAQ,MAEV,CACEJ,GAAI,EACJK,KAAM,YACND,OAAQ,MCmCGK,MAjDf,WACE,MAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KAEA,EAAoCF,mBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAkCJ,mBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KACA,EAA8BN,mBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KAeA,OACE,mCACE,uBAAMC,SARW,SAACC,GACpBA,EAAEC,iBAEFT,EADqBG,EAAYE,EAAWJ,EAE7C,EAIG,UACE,sBAAKd,UAAU,iBAAf,UACE,cAAC,EAAD,CACEJ,MAAM,SACNE,SAAU,SAACuB,GACTN,EAAcM,EAAEE,OAAOnB,MACxB,IAEH,sBAAKJ,UAAU,MAAf,UACE,cAAC,EAAD,CACEJ,MAAM,OACNC,MAAOY,EACPX,SA3Ba,SAACuB,GACxBJ,EAAaI,EAAEE,OAAOnB,MACvB,IA2BS,cAAC,EAAD,CAAQR,MAAM,KAAKC,MAAOY,EAAOX,SA1BpB,SAACuB,GACtBF,EAAWE,EAAEE,OAAOnB,MACrB,IAyBS,mDAIJ,sBAAKH,GAAG,SAAR,wBACa,sBAAM,cAAY,SAAlB,SAA4BW,WAKhD,EC/CDY,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,qBAAK1B,UAAU,iBAAf,SACE,qBAAKA,UAAU,iBAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,EAAD,YAKR2B,SAASC,eAAe,Q","file":"static/js/main.d5f25253.chunk.js","sourcesContent":["function Select({ label, items, onChange }) {\n  return (\n    <div>\n      <label htmlFor={`${label}-select`}>{label}</label>\n      <div className=\"select\">\n        <select id={`${label}-select`} data-testid={label} onChange={onChange}>\n          {items.map((option) => (\n            <option value={option.factor} key={option.id}>\n              {option.name}\n            </option>\n          ))}\n        </select>\n      </div>\n    </div>\n  );\n}\n\nexport default Select;\n","function Input({ label, onChange }) {\n  return (\n    <>\n      <label htmlFor={label}>{label}</label>\n      <input type=\"text\" id={label} data-testid={label} onChange={onChange} />\n    </>\n  )\n}\n\nexport default Input\n","export const units = [\n  {\n    id: 1,\n    name: 'Meter',\n    factor: 1,\n  },\n  {\n    id: 2,\n    name: 'Centimeter',\n    factor: 0.01,\n  },\n  {\n    id: 3,\n    name: 'Millimeter',\n    factor: 0.001,\n  },\n  {\n    id: 4,\n    name: 'Kilometer',\n    factor: 1000,\n  },\n]\n","import React, { useState } from \"react\";\nimport Select from \"./components/Select\";\nimport Input from \"./components/Input\";\nimport { units } from \"./units\";\n\nfunction App() {\n  const [result, setResult] = useState(0);\n\n  const [inputValue, setInputValue] = useState(0);\n  const [fromValue, setFromValue] = useState(1);\n  const [toValue, setToValue] = useState(1);\n\n  const fromHandleChange = (e) => {\n    setFromValue(e.target.value);\n  };\n  const toHandleChange = (e) => {\n    setToValue(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const finalResult = (fromValue / toValue) * inputValue;\n    setResult(finalResult);\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <div className=\"converter-form\">\n          <Input\n            label=\"Amount\"\n            onChange={(e) => {\n              setInputValue(e.target.value);\n            }}\n          />\n          <div className=\"row\">\n            <Select\n              label=\"From\"\n              items={units}\n              onChange={fromHandleChange}\n            ></Select>\n            <Select label=\"To\" items={units} onChange={toHandleChange}></Select>\n            <button>Convert</button>\n          </div>\n        </div>\n\n        <div id=\"result\">\n          Result is: <span data-testid=\"result\">{result}</span>\n        </div>\n      </form>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './assets/css/index.css'\nimport App from './App'\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"main-container\">\n      <div className=\"form-container\">\n        <div className=\"form-body\">\n          <App />\n        </div>\n      </div>\n    </div>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}